// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name MiVIPLiveness
import AVFoundation
import Foundation
import Swift
import UIKit
import VideoToolbox
import Vision
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os.log
import os
@objc @_inheritsConvenienceInitializers public class SelfieApi : ObjectiveC.NSObject {
  @objc override dynamic public init()
  public init(useCoreApi: Swift.Bool, environment: Swift.String, apiUri: Swift.String? = nil)
  public func addSelfie(_ face: UIKit.UIImage, _ idRequest: Swift.String?, _ businessId: Swift.String?, _ mipassEnroll: Swift.Bool = false, callbackUrl: Swift.String? = nil, completion: @escaping (Swift.Int, UIKit.UIImage?, UIKit.UIImage?, UIKit.UIImage?, Swift.Bool?) -> ())
  public func liveness(_ faces: [UIKit.UIImage?], _ reference: Swift.String?, _ idRequest: Swift.String?, _ businessId: Swift.String?, _ mipassEnroll: Swift.Bool = false, _ captureData: [Swift.String : Swift.String]? = nil, base64Image: Swift.String? = nil, callbackUrl: Swift.String? = nil, completion: @escaping (Swift.Int, Swift.Bool, UIKit.UIImage?, Swift.Bool?) -> ())
  @objc deinit
}
public protocol LivenessDelegate : AnyObject {
  func done(_ httpStatusCode: Swift.Int, _ faceDetected: Swift.Bool, _ face: UIKit.UIImage?, _ faceThumb: UIKit.UIImage?, _ livenessImages: [UIKit.UIImage?], _ maxAttemptsReached: Swift.Bool?)
  func getReference() -> Swift.String?
  func getRequestid() -> Swift.String?
  func getBuisnessId() -> Swift.String?
  func livenessDetection()
  func cancel()
}
@objc public class FaceDetector : ObjectiveC.NSObject, AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate {
  public var delegate: (any MiVIPLiveness.LivenessDelegate)?
  public init(view: UIKit.UIView, textBackgroundColor: UIKit.UIColor = UIColor.black, textBackgroundColorDone: UIKit.UIColor = UIColor.black, fullscreen: Swift.Bool, useCoreApi: Swift.Bool = false, environment: Swift.String = "mobile", miPassEnroll: Swift.Bool = false, apiUri: Swift.String? = nil, callbackUrl: Swift.String? = nil)
  public func start()
  public func reset()
  @objc public func captureOutput(_ output: AVFoundation.AVCaptureOutput, didOutput sampleBuffer: CoreMedia.CMSampleBuffer, from connection: AVFoundation.AVCaptureConnection)
  @objc deinit
}
